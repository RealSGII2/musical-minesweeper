{"version":3,"sources":["components/CButton.tsx","queues/snackbar.ts","components/MineGrid.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Button","children","disabled","rest","className","createSnackbarQueue","pressed","flagged","id","numCharMap","x","0","1","alt","src","2","3","4","5","6","7","8","generateFieldOf","width","height","value","field","i","j","generateEmptyField","generateSolvedField","numMines","excludeX","excludeY","Math","floor","random","y","MineGrid","React","forwardRef","props","ref","useState","grid","setGrid","revealedGrid","setRevealedGrid","numRevealedTiles","setNumRevealedTiles","numFlags","setNumFlags","hasStarted","setStarted","clickCoords","setClickCoords","openCongrats","setOpenCongrats","openGameOver","setOpenGameOver","Congrats","GameOver","onStart","onEnd","onReset","useEffect","updateTileState","length","useImperativeHandle","newGame","setFlagsCount","restartGame","solveGame","revealNeighbourZeros","adjacentCellsToReveal","push","shift","renderTile","buttons","Array","onClick","onContextMenu","event","preventDefault","toggleFlag","target","blur","revealed","close","map","b","difficulties","name","rowCount","colCount","mineCount","App","openDifficultyDialog","openHelpDialog","flagCount","useRef","rerender","setRerender","useStopwatch","_seconds","seconds","_minutes","minutes","_hours","hours","start","pause","reset","toString","time","current","Stats","use","newGameSnackbar","body","dismissesOnAction","actions","title","leading","messages","snackbarQueue","icon","label","outlined","notify","unelevated","CButton","Container","difficultyOpen","setDifficultyOpen","selectedDifficulty","setSelectedDifficulty","helpOpen","setHelpOpen","setRowCount","setColCount","setMineCount","app","open","onClose","evt","detail","action","difficulty","setTimeout","twoLine","style","item","index","checked","readOnly","marginBottom","marginTop","href","isDefaultAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d290fe4a.chunk.js","sourcesContent":["import { DetailedHTMLProps, HTMLAttributes, ReactNode } from 'react';\r\nimport '../styles/app.scss';\r\n\r\nimport { Ripple } from '@rmwc/ripple';\r\nimport '@rmwc/ripple/styles';\r\n\r\nfunction Button({ children, disabled, ...rest }: { children: ReactNode, disabled?: boolean } & DetailedHTMLProps<\r\n\tHTMLAttributes<HTMLButtonElement>,\r\n\tHTMLButtonElement\r\n>) {\r\n  return (\r\n    <Ripple disabled={disabled}>\r\n        <button className=\"customButton\" disabled={disabled} {...rest}>\r\n            {children}\r\n        </button>\r\n    </Ripple>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import { createSnackbarQueue } from '@rmwc/snackbar';\r\n\r\nexport default createSnackbarQueue()","import React, {\r\n\tComponent,\r\n\tDetailedHTMLProps,\r\n\tHTMLAttributes,\r\n\tReactNode,\r\n\tuseEffect,\r\n\tuseState,\r\n} from 'react';\r\nimport '../styles/app.scss';\r\n\r\n// Minicomponents\r\nfunction Button({\r\n\tchildren,\r\n\tpressed,\r\n\tflagged,\r\n\tid,\r\n\t...rest\r\n}: {\r\n\tchildren: ReactNode;\r\n\tpressed: boolean;\r\n\tflagged: boolean;\r\n} & DetailedHTMLProps<HTMLAttributes<HTMLButtonElement>, HTMLButtonElement>) {\r\n\treturn (\r\n\t\t<td className={`${flagged ? 'flagged' : ''}`}>\r\n\t\t\t<button\r\n\t\t\t\tclassName={`gridButton ${pressed ? 'pressed' : ''}`}\r\n\t\t\t\tid={id}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</button>\r\n\t\t</td>\r\n\t);\r\n}\r\n\r\n// Actual grid\r\n// const numColorsMap: any = {\r\n// \tx: null,\r\n// \t0: 'lightgrey',\r\n// \t1: 'blue',\r\n// \t2: 'green',\r\n// \t3: 'red',\r\n// \t4: 'purple',\r\n// \t5: 'maroon',\r\n// \t6: 'turquoise',\r\n// \t7: 'black',\r\n// \t8: 'grey',\r\n// };\r\n\r\n/// OLD\r\n// const numCharMap: any = {\r\n// \tx: null,\r\n// \t0: '',\r\n// \t1: '𝅝',\r\n// \t2: '𝅗𝅥',\r\n// \t3: '♩',\r\n// \t4: '♪',\r\n// \t5: '𝅘𝅥𝅯',\r\n// \t6: '𝅘𝅥𝅰',\r\n// \t7: '𝅘𝅥𝅱',\r\n// \t8: '𝅘𝅥𝅲',\r\n// }\r\n\r\nconst numCharMap: any = {\r\n\tx: null,\r\n\t0: '',\r\n\t1: <img alt='1' src='/icons/whole.png' />,\r\n\t2: <img alt='2' src='/icons/half.png' />,\r\n\t3: <img alt='3' src='/icons/quarter.png' />,\r\n\t4: <img alt='4' src='/icons/eighth.png' />,\r\n\t5: <img alt='5' src='/icons/sixteenth.png' />,\r\n\t6: <img alt='6' src='/icons/thirty_second.png' />,\r\n\t7: <img alt='7' src='/icons/sixty_fourth.png' />,\r\n\t8: <img alt='8' src='/icons/one_twenty_eighth.png' />,\r\n};\r\n\r\nconst generateFieldOf = (width: number, height: number, value: number) => {\r\n\tlet field: any = [];\r\n\tfor (let i = 0; i < height; i++) {\r\n\t\tfield[i] = [];\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\tfield[i][j] = value;\r\n\t\t}\r\n\t}\r\n\r\n\treturn [...field];\r\n};\r\n\r\nexport const generateEmptyField = (width: number, height: number) =>\r\n\tgenerateFieldOf(width, height, -1);\r\n\r\nexport const generateSolvedField = (\r\n\twidth: number,\r\n\theight: number,\r\n\tnumMines: number,\r\n\texcludeX: number,\r\n\texcludeY: number\r\n) => {\r\n\tlet field: any = generateFieldOf(width, height, 0);\r\n\t// add mines\r\n\twhile (numMines > 0) {\r\n\t\tconst x = Math.floor(Math.random() * width);\r\n\t\tconst y = Math.floor(Math.random() * height);\r\n\t\t// As it's small ints, might have duplicates, thus checking\r\n\t\tif (\r\n\t\t\tfield[y][x] === 'x' ||\r\n\t\t\t(excludeX - 1 <= x &&\r\n\t\t\t\tx <= excludeX + 1 &&\r\n\t\t\t\texcludeY - 1 <= y &&\r\n\t\t\t\ty <= excludeY + 1)\r\n\t\t)\r\n\t\t\tcontinue;\r\n\t\tfield[y][x] = 'x';\r\n\t\tnumMines -= 1;\r\n\t}\r\n\t// populate numbers\r\n\tfor (let i = 0; i < height; i++) {\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\tif (field[i][j] === 'x') {\r\n\t\t\t\t// increment top left\r\n\t\t\t\tif (typeof field[i - 1]?.[j - 1] === 'number')\r\n\t\t\t\t\tfield[i - 1][j - 1]++;\r\n\t\t\t\t// increment top\r\n\t\t\t\tif (typeof field[i - 1]?.[j] === 'number') field[i - 1][j]++;\r\n\t\t\t\t// increment top right\r\n\t\t\t\tif (typeof field[i - 1]?.[j + 1] === 'number')\r\n\t\t\t\t\tfield[i - 1][j + 1]++;\r\n\t\t\t\t// increment right\r\n\t\t\t\tif (typeof field[i]?.[j + 1] === 'number') field[i][j + 1]++;\r\n\t\t\t\t// increment bottom right\r\n\t\t\t\tif (typeof field[i + 1]?.[j + 1] === 'number')\r\n\t\t\t\t\tfield[i + 1][j + 1]++;\r\n\t\t\t\t// increment bottom\r\n\t\t\t\tif (typeof field[i + 1]?.[j] === 'number') field[i + 1][j]++;\r\n\t\t\t\t// increment bottom left\r\n\t\t\t\tif (typeof field[i + 1]?.[j - 1] === 'number')\r\n\t\t\t\t\tfield[i + 1][j - 1]++;\r\n\t\t\t\t// increment left\r\n\t\t\t\tif (typeof field[i]?.[j - 1] === 'number') field[i][j - 1]++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn [...field];\r\n};\r\n\r\nconst MineGrid = React.forwardRef((props: any, ref) => {\r\n\tlet [grid, setGrid] = useState(\r\n\t\tgenerateEmptyField(props.width, props.height)\r\n\t);\r\n\tlet [revealedGrid, setRevealedGrid] = useState(\r\n\t\tgenerateFieldOf(props.width, props.height, 0)\r\n\t);\r\n\tlet [numRevealedTiles, setNumRevealedTiles] = useState(0);\r\n\tlet [numFlags, setNumFlags] = useState(0);\r\n\tlet [hasStarted, setStarted] = useState(false);\r\n\r\n\tlet [clickCoords, setClickCoords] = useState<any[]>([null, null]);\r\n\r\n\tconst [openCongrats, setOpenCongrats] = React.useState(false);\r\n\tconst [openGameOver, setOpenGameOver] = React.useState(false);\r\n\r\n\tconst { Congrats, GameOver, onStart, onEnd, onReset } = props;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (clickCoords[0] != null && clickCoords[1] != null) {\r\n\t\t\tupdateTileState(clickCoords[1], clickCoords[0]);\r\n\t\t}\r\n\t}, [grid]);\r\n\r\n\tif (grid.length !== props.height) {\r\n\t\tif (clickCoords[0] == null && clickCoords[1] == null)\r\n\t\t\tsetGrid(generateEmptyField(props.width, props.height));\r\n\t\telse\r\n\t\t\tsetGrid(\r\n\t\t\t\tgenerateSolvedField(\r\n\t\t\t\t\tprops.width,\r\n\t\t\t\t\tprops.height,\r\n\t\t\t\t\tprops.numMines,\r\n\t\t\t\t\tclickCoords[0] ?? 0,\r\n\t\t\t\t\tclickCoords[1] ?? 0\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t}\r\n\r\n\tif (revealedGrid.length !== props.height) {\r\n\t\tsetRevealedGrid(generateFieldOf(props.width, props.height, 0));\r\n\t}\r\n\r\n\tReact.useImperativeHandle(ref, () => ({\r\n\t\tnewGame() {\r\n\t\t\tsetClickCoords([null, null]);\r\n\t\t\tsetNumFlags(0);\r\n\t\t\tprops.setFlagsCount(0);\r\n\t\t\tsetNumRevealedTiles(0);\r\n\t\t\tsetGrid([...generateEmptyField(props.width, props.height)]);\r\n\t\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 0)]);\r\n\r\n\t\t\tsetOpenCongrats(false);\r\n\t\t\tsetOpenGameOver(false);\r\n\r\n\t\t\tonReset(0, false);\r\n\t\t\tsetStarted(false);\r\n\t\t},\r\n\t\trestartGame() {\r\n\t\t\tsetClickCoords([null, null]);\r\n\t\t\tsetNumFlags(0);\r\n\t\t\tprops.setFlagsCount(0);\r\n\t\t\tsetNumRevealedTiles(0);\r\n\t\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 0)]);\r\n\t\t\tsetStarted(false);\r\n\t\t},\r\n\t\tsolveGame() {\r\n\t\t\tsetNumFlags(0);\r\n\t\t\tprops.setFlagsCount(0);\r\n\t\t\tsetNumRevealedTiles(0);\r\n\t\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 1)]);\r\n\t\t\tsetStarted(false);\r\n\t\t},\r\n\t}));\r\n\r\n\tconst gameOver = () => {\r\n\t\tsetOpenGameOver(true);\r\n\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 1)]);\r\n\t\tonEnd();\r\n\t};\r\n\r\n\tconst winGame = () => {\r\n\t\tsetOpenCongrats(true);\r\n\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 1)]);\r\n\t\tonEnd();\r\n\t};\r\n\r\n\tconst updateTileState = (i: number, j: number) => {\r\n\t\tif (revealedGrid[i][j] === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (grid[i][j] === 0) {\r\n\t\t\trevealNeighbourZeros(i, j);\r\n\t\t}\r\n\t\tif (grid[i][j] === 'x') {\r\n\t\t\tgameOver();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\trevealedGrid[i][j] = 1;\r\n\t\tlet numRevealedTiles = 0;\r\n\t\tfor (let i = 0; i < revealedGrid.length; i++) {\r\n\t\t\tfor (let j = 0; j < revealedGrid[i].length; j++) {\r\n\t\t\t\tif (revealedGrid[i][j] === 1) {\r\n\t\t\t\t\tnumRevealedTiles += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetNumRevealedTiles(numRevealedTiles);\r\n\t\tsetRevealedGrid([...revealedGrid]);\r\n\t\tnumRevealedTiles === props.width * props.height - props.numMines &&\r\n\t\t\twinGame();\r\n\t};\r\n\r\n\tconst toggleFlag = (i: number, j: number) => {\r\n\t\tif (revealedGrid[i][j] === 0) {\r\n\t\t\trevealedGrid[i][j] = 2;\r\n\t\t\tsetNumFlags(++numFlags);\r\n\t\t} else if (revealedGrid[i][j] === 2) {\r\n\t\t\trevealedGrid[i][j] = 0;\r\n\t\t\tsetNumFlags(--numFlags);\r\n\t\t}\r\n\r\n\t\tprops.setFlagsCount(numFlags);\r\n\t\tsetRevealedGrid([...revealedGrid]);\r\n\t};\r\n\r\n\tconst revealNeighbourZeros = (x: number, y: number) => {\r\n\t\tlet adjacentCellsToReveal = [[x, y]];\r\n\t\trevealedGrid[x][y] = 1;\r\n\t\twhile (adjacentCellsToReveal.length > 0) {\r\n\t\t\tlet [i, j] = adjacentCellsToReveal[0];\r\n\t\t\t// reveal top left\r\n\t\t\tif (\r\n\t\t\t\tgrid[i - 1]?.[j - 1] >= 0 &&\r\n\t\t\t\trevealedGrid[i - 1]?.[j - 1] !== 1\r\n\t\t\t) {\r\n\t\t\t\trevealedGrid[i - 1][j - 1] = 1;\r\n\t\t\t\tgrid[i - 1]?.[j - 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i - 1, j - 1]);\r\n\t\t\t}\r\n\t\t\t// reveal top\r\n\t\t\tif (grid[i - 1]?.[j] >= 0 && revealedGrid[i - 1]?.[j] !== 1) {\r\n\t\t\t\trevealedGrid[i - 1][j] = 1;\r\n\t\t\t\tgrid[i - 1]?.[j] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i - 1, j]);\r\n\t\t\t}\r\n\t\t\t// reveal top right\r\n\t\t\tif (\r\n\t\t\t\tgrid[i - 1]?.[j + 1] >= 0 &&\r\n\t\t\t\trevealedGrid[i - 1]?.[j + 1] !== 1\r\n\t\t\t) {\r\n\t\t\t\trevealedGrid[i - 1][j + 1] = 1;\r\n\t\t\t\tgrid[i - 1]?.[j + 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i - 1, j + 1]);\r\n\t\t\t}\r\n\t\t\t// reveal right\r\n\t\t\tif (grid[i]?.[j + 1] >= 0 && revealedGrid[i]?.[j + 1] !== 1) {\r\n\t\t\t\trevealedGrid[i][j + 1] = 1;\r\n\t\t\t\tgrid[i]?.[j + 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i, j + 1]);\r\n\t\t\t}\r\n\t\t\t// reveal bottom right\r\n\t\t\tif (\r\n\t\t\t\tgrid[i + 1]?.[j + 1] >= 0 &&\r\n\t\t\t\trevealedGrid[i + 1]?.[j + 1] !== 1\r\n\t\t\t) {\r\n\t\t\t\trevealedGrid[i + 1][j + 1] = 1;\r\n\t\t\t\tgrid[i + 1]?.[j + 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i + 1, j + 1]);\r\n\t\t\t}\r\n\t\t\t// reveal bottom\r\n\t\t\tif (grid[i + 1]?.[j] >= 0 && revealedGrid[i + 1]?.[j] !== 1) {\r\n\t\t\t\trevealedGrid[i + 1][j] = 1;\r\n\t\t\t\tgrid[i + 1]?.[j] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i + 1, j]);\r\n\t\t\t}\r\n\t\t\t// reveal bottom left\r\n\t\t\tif (\r\n\t\t\t\tgrid[i + 1]?.[j - 1] >= 0 &&\r\n\t\t\t\trevealedGrid[i + 1]?.[j - 1] !== 1\r\n\t\t\t) {\r\n\t\t\t\trevealedGrid[i + 1][j - 1] = 1;\r\n\t\t\t\tgrid[i + 1]?.[j - 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i + 1, j - 1]);\r\n\t\t\t}\r\n\t\t\t// reveal left\r\n\t\t\tif (grid[i]?.[j - 1] >= 0 && revealedGrid[i]?.[j - 1] !== 1) {\r\n\t\t\t\trevealedGrid[i][j - 1] = 1;\r\n\t\t\t\tgrid[i]?.[j - 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i, j - 1]);\r\n\t\t\t}\r\n\t\t\tadjacentCellsToReveal.shift();\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderTile = (i: number, j: number) => {\r\n\t\tif (revealedGrid[i][j] === 0) {\r\n\t\t\t// not opened\r\n\t\t\treturn '';\r\n\t\t} else if (revealedGrid[i][j] === 1) {\r\n\t\t\t// opened\r\n\t\t\tif (typeof grid[i][j] === 'number') {\r\n\t\t\t\treturn numCharMap[grid[i][j]];\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc='https://twemoji.maxcdn.com/v/latest/svg/1f4a3.svg'\r\n\t\t\t\t\t\talt='mine'\r\n\t\t\t\t\t\twidth={20}\r\n\t\t\t\t\t\theight={20}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else if (revealedGrid[i][j] === 2) {\r\n\t\t\t// flagged\r\n\t\t\treturn (\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc='https://twemoji.maxcdn.com/v/latest/svg/1f6a9.svg'\r\n\t\t\t\t\talt='flag'\r\n\t\t\t\t\twidth={20}\r\n\t\t\t\t\theight={20}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tlet buttons = [];\r\n\tfor (let i = 0; i < grid.length; i++) {\r\n\t\tbuttons[i] = new Array<any>();\r\n\t\tfor (let j = 0; j < grid[i].length; j++) {\r\n\t\t\tbuttons[i].push(\r\n\t\t\t\t<Button\r\n\t\t\t\t\tid={i + ':' + j}\r\n\t\t\t\t\tpressed={revealedGrid[i][j] === 1}\r\n\t\t\t\t\tflagged={revealedGrid[i][j] === 2}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (revealedGrid[i][j] === 2) return;\r\n\r\n\t\t\t\t\t\tif (!hasStarted) {\r\n\t\t\t\t\t\t\tsetStarted(true);\r\n\r\n\t\t\t\t\t\t\tsetClickCoords([null, null]);\r\n\t\t\t\t\t\t\tsetClickCoords([j, i]);\r\n\r\n\t\t\t\t\t\t\tsetGrid([\r\n\t\t\t\t\t\t\t\t...generateSolvedField(\r\n\t\t\t\t\t\t\t\t\tprops.width,\r\n\t\t\t\t\t\t\t\t\tprops.height,\r\n\t\t\t\t\t\t\t\t\tprops.numMines,\r\n\t\t\t\t\t\t\t\t\tj,\r\n\t\t\t\t\t\t\t\t\ti\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t]);\r\n\r\n\t\t\t\t\t\t\tonStart();\r\n\t\t\t\t\t\t} else updateTileState(i, j);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonContextMenu={(event) => {\r\n\t\t\t\t\t\tif (!hasStarted) return event.preventDefault();\r\n\t\t\t\t\t\ttoggleFlag(i, j);\r\n\t\t\t\t\t\t(event.target as HTMLElement).blur();\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{renderTile(i, j)}\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`map ${props.width < 16 ? 'small' : ''}`}>\r\n\t\t\t\t{openCongrats &&\r\n\t\t\t\t\tCongrats({\r\n\t\t\t\t\t\trevealed: numRevealedTiles,\r\n\t\t\t\t\t\tclose: () => setOpenCongrats(false),\r\n\t\t\t\t\t})}\r\n\t\t\t\t{openGameOver &&\r\n\t\t\t\t\tGameOver({\r\n\t\t\t\t\t\trevealed: numRevealedTiles,\r\n\t\t\t\t\t\tclose: () => setOpenGameOver(false),\r\n\t\t\t\t\t})}\r\n\t\t\t\t<table>\r\n\t\t\t\t\t{buttons.map((b) => (\r\n\t\t\t\t\t\t<tr>{b}</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default MineGrid;\r\n","import CButton from './components/CButton';\nimport Grid from './components/MineGrid';\nimport './styles/app.scss';\n\nimport { Button } from '@rmwc/button';\nimport {\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogActions,\n\tDialogButton,\n} from '@rmwc/dialog';\nimport { IconButton } from '@rmwc/icon-button';\nimport {\n\tList,\n\tListItem,\n\tListItemMeta,\n\tListItemPrimaryText,\n\tListItemSecondaryText,\n\tListItemText,\n} from '@rmwc/list';\nimport { Radio } from '@rmwc/radio';\nimport { Typography } from '@rmwc/typography';\nimport { SnackbarQueue } from '@rmwc/snackbar';\nimport '@rmwc/button/styles';\nimport '@rmwc/dialog/styles';\nimport '@rmwc/icon-button/styles';\nimport '@rmwc/list/styles';\nimport '@rmwc/radio/styles';\nimport '@rmwc/typography/styles';\nimport '@rmwc/snackbar/styles';\n\nimport snackbarQueue from './queues/snackbar';\n\nimport { forwardRef, useRef, useState } from 'react';\nimport MineGrid from './components/MineGrid';\n\nimport { useStopwatch } from 'react-timer-hook';\nimport React from 'react';\n\nconst difficulties = [\n\t{\n\t\tname: 'Beginner',\n\t\trowCount: 9,\n\t\tcolCount: 9,\n\t\tmineCount: 10,\n\t},\n\t{\n\t\tname: 'Intermediate',\n\t\trowCount: 16,\n\t\tcolCount: 16,\n\t\tmineCount: 40,\n\t},\n\t{\n\t\tname: 'Expert',\n\t\trowCount: 16,\n\t\tcolCount: 30,\n\t\tmineCount: 99,\n\t},\n];\n\nconst App = forwardRef(\n\t(\n\t\t{\n\t\t\trowCount,\n\t\t\tcolCount,\n\t\t\tmineCount,\n\t\t\topenDifficultyDialog,\n      openHelpDialog,\n\t\t}: { [index: string]: any },\n\t\tref\n\t) => {\n\t\t// Actual state\n\t\tconst [flagCount, setFlagCount] = useState(0);\n\t\tconst grid = useRef<any>();\n\n    // Rerender\n    const [rerender, setRerender] = useState(0);\n\n\t\t// Timer\n\t\tconst {\n\t\t\tseconds: _seconds,\n\t\t\tminutes: _minutes,\n\t\t\thours: _hours,\n\t\t\tstart,\n\t\t\tpause,\n\t\t\treset,\n\t\t} = useStopwatch({});\n\n\t\tconst seconds =\n\t\t\t_seconds.toString().length == 1 ? `0${_seconds}` : _seconds;\n\t\tconst minutes =\n\t\t\t_minutes.toString().length == 1 ? `0${_minutes}` : _minutes;\n\t\tconst hours = _hours.toString().length == 1 ? `0${_hours}` : _hours;\n\n\t\tconst time = `${hours}:${minutes}:${seconds}`;\n\n\t\t// Functions\n\t\tReact.useImperativeHandle(ref, () => ({\n\t\t\tnewGame() {\n\t\t\t\tgrid.current.newGame();\n\t\t\t},\n      rerender() {\n        setRerender(rerender + 1);\n      }\n\t\t}));\n\n\t\tconst Stats = ({ revealed }: any) => (\n\t\t\t<div className='flexRow'>\n\t\t\t\t<div>\n\t\t\t\t\t<Typography use='headline5'>{flagCount}</Typography>\n\t\t\t\t\t<Typography use='subtitle2'>Flags Placed</Typography>\n\t\t\t\t</div>\n\t\t\t\t<div className='divider' />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography use='headline5'>{time}</Typography>\n\t\t\t\t\t<Typography use='subtitle2'>Time</Typography>\n\t\t\t\t</div>\n\t\t\t\t<div className='divider' />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography use='headline5'>{revealed}</Typography>\n\t\t\t\t\t<Typography use='subtitle2'>Blocks revealed</Typography>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\tconst newGameSnackbar = {\n\t\t\tbody: \"Click 'Start a new match' to make a new game\",\n\t\t\tdismissesOnAction: true,\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Dismiss',\n\t\t\t\t},\n\t\t\t],\n\t\t\tleading: true,\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<SnackbarQueue messages={snackbarQueue.messages} />\n\n\t\t\t\t<div className='gameWrapper'>\n\t\t\t\t\t<div className='header'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc='https://twemoji.maxcdn.com/v/latest/svg/1f6a9.svg'\n\t\t\t\t\t\t\t\tclassName='icon'\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div>{mineCount - flagCount}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='divider'></div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc='https://twemoji.maxcdn.com/v/latest/svg/1f550.svg'\n\t\t\t\t\t\t\t\tclassName='icon'\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div>{time}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spacer' />\n\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ticon='help_outline'\n\t\t\t\t\t\t\tlabel='Help & controls'\n              onClick={openHelpDialog}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<MineGrid\n\t\t\t\t\t\tref={grid}\n\t\t\t\t\t\theight={rowCount || 16}\n\t\t\t\t\t\twidth={colCount || 30}\n\t\t\t\t\t\tnumMines={mineCount || 99}\n\t\t\t\t\t\tsetFlagsCount={() => {}}\n\t\t\t\t\t\tonStart={start}\n\t\t\t\t\t\tonEnd={pause}\n\t\t\t\t\t\tonReset={reset}\n\t\t\t\t\t\tGameOver={({ revealed, close }: any) => (\n\t\t\t\t\t\t\t<div className='banner error'>\n\t\t\t\t\t\t\t\t<Typography use='headline4'>\n\t\t\t\t\t\t\t\t\tGame Over\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography use='subtitle1'>\n\t\t\t\t\t\t\t\t\tYou triggered a mine.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Stats revealed={revealed} />\n\n\t\t\t\t\t\t\t\t<div className='buttonRow'>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='Review last game'\n\t\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsnackbarQueue.notify(\n\t\t\t\t\t\t\t\t\t\t\t\tnewGameSnackbar\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='Change difficulty'\n\t\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t\t\tonClick={openDifficultyDialog}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='New game'\n\t\t\t\t\t\t\t\t\t\tunelevated\n\t\t\t\t\t\t\t\t\t\tonClick={grid?.current?.newGame}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tCongrats={({ revealed, close }: any) => (\n\t\t\t\t\t\t\t<div className='banner error'>\n\t\t\t\t\t\t\t\t<Typography use='headline4'>\n\t\t\t\t\t\t\t\t\tGame Completed!\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography use='subtitle1'>\n\t\t\t\t\t\t\t\t\tYou got through the entire map without\n\t\t\t\t\t\t\t\t\ttriggering a mine.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Stats revealed={revealed} />\n\n\t\t\t\t\t\t\t\t<div className='buttonRow'>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='Review last game'\n\t\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsnackbarQueue.notify(\n\t\t\t\t\t\t\t\t\t\t\t\tnewGameSnackbar\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='Change difficulty'\n\t\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t\t\tonClick={openDifficultyDialog}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='New game'\n\t\t\t\t\t\t\t\t\t\tunelevated\n\t\t\t\t\t\t\t\t\t\tonClick={grid?.current?.newGame}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className='actionRow buttonRow'>\n\t\t\t\t\t\t<CButton onClick={grid?.current?.newGame}>\n\t\t\t\t\t\t\t<span className='material-icons'>refresh</span>\n\t\t\t\t\t\t\t<span>Start a new match</span>\n\t\t\t\t\t\t</CButton>\n\n\t\t\t\t\t\t<CButton onClick={openDifficultyDialog}>\n\t\t\t\t\t\t\t<span className='material-icons'>tune</span>\n\t\t\t\t\t\t\t<span>Change difficulty</span>\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n);\n\nfunction Container() {\n\t// Dialogs\n\t/* Difficulty */\n\tconst [difficultyOpen, setDifficultyOpen] = useState(false);\n\tconst [selectedDifficulty, setSelectedDifficulty] = useState(2);\n\n  /* Help */\n\tconst [helpOpen, setHelpOpen] = useState(false);\n\n\t// Configuration\n\tconst [rowCount, setRowCount] = useState(16);\n\tconst [colCount, setColCount] = useState(30);\n\tconst [mineCount, setMineCount] = useState(99);\n\n\t// App ref\n\tconst app = useRef<any>();\n\n\treturn (\n\t\t<>\n\t\t\t<Dialog\n\t\t\t\topen={difficultyOpen}\n\t\t\t\tonClose={(evt) => {\n\t\t\t\t\tif (evt.detail.action == 'change') {\n\t\t\t\t\t\tconst difficulty = difficulties[selectedDifficulty];\n\n\t\t\t\t\t\tsetRowCount(difficulty.rowCount);\n\t\t\t\t\t\tsetColCount(difficulty.colCount);\n\t\t\t\t\t\tsetMineCount(difficulty.mineCount);\n\n            app.current?.rerender();\n\n\t\t\t\t\t\tsetTimeout(() => {\n              app.current?.newGame();\n            }, 50)\n\t\t\t\t\t}\n\n\t\t\t\t\tsetDifficultyOpen(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DialogTitle>Change Difficulty</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>Warning:</b> This will create a new game.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<List twoLine style={{ width: 480 }}>\n\t\t\t\t\t\t{difficulties.map((item, index) => (\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonClick={() => setSelectedDifficulty(index)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemText>\n\t\t\t\t\t\t\t\t\t<ListItemPrimaryText>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</ListItemPrimaryText>\n\t\t\t\t\t\t\t\t\t<ListItemSecondaryText>\n\t\t\t\t\t\t\t\t\t\tRows: {item.rowCount} - Columns:{' '}\n\t\t\t\t\t\t\t\t\t\t{item.colCount} - Mines:{' '}\n\t\t\t\t\t\t\t\t\t\t{item.mineCount}\n\t\t\t\t\t\t\t\t\t</ListItemSecondaryText>\n\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t<ListItemMeta>\n\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\tchecked={selectedDifficulty === index}\n\t\t\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ListItemMeta>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<DialogButton action='close'>Cancel</DialogButton>\n\t\t\t\t\t<DialogButton action='change' unelevated>\n\t\t\t\t\t\tChange difficulty\n\t\t\t\t\t</DialogButton>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\n      <Dialog\n\t\t\t\topen={helpOpen}\n\t\t\t\tonClose={(evt) => {\n\t\t\t\t\tsetHelpOpen(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DialogTitle>Info</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<p style={{ marginBottom: 0 }}>\n\t\t\t\t\t\tMusical Minesweeper, v1.1.0 by RealSGII2.\n\t\t\t\t\t</p>\n          <p style={{ marginTop: 0 }}>\n            A skin of Minesweeper using musical notes.\n          </p>\n\n          <Typography use=\"headline5\">\n            Main Goal\n          </Typography>\n          <p>\n            Clear the entire map except for blocks containing mines underneath them. Flagging is optional, but may be useful.\n          </p>\n\n          <Typography use=\"headline5\">\n            Controls\n          </Typography>\n          <p>\n            <b>Left mouse button</b>: Reveal a block <br/>\n            <b>Right mouse button</b>: Flag a block, again to unflag\n          </p>\n\n          <Typography use=\"headline6\">\n            Mobile\n          </Typography>\n          <p style={{ marginTop: 0 }}>\n            <b>Tap</b>: Reveal a block <br/>\n            <b>Long press</b>: Flag a block, again to unflag\n          </p>\n\n          <Typography use=\"headline5\">\n            Credits\n          </Typography>\n          <p>\n            Flag, clock, and bomb emoji made by Twitter in the Twemoji project. This website uses <a href=\"https://material.io/\" target=\"_blank\">https://material.io/</a> standards.\n          </p>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<DialogButton action='close' isDefaultAction>Dismiss</DialogButton>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\n\t\t\t<App\n\t\t\t\trowCount={rowCount}\n\t\t\t\tcolCount={colCount}\n\t\t\t\tmineCount={mineCount}\n\t\t\t\topenDifficultyDialog={() => setDifficultyOpen(true)}\n        openHelpDialog={() => setHelpOpen(true)}\n\t\t\t\tref={app}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default Container;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}