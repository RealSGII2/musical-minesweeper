{"version":3,"sources":["components/CButton.tsx","queues/snackbar.ts","components/MineGrid.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Button","children","disabled","rest","className","createSnackbarQueue","pressed","id","numColorsMap","x","0","1","2","3","4","5","6","7","8","numCharMap","generateFieldOf","width","height","value","field","i","j","generateSolvedField","numMines","Math","floor","random","y","MineGrid","React","forwardRef","props","ref","useState","grid","setGrid","revealedGrid","setRevealedGrid","numRevealedTiles","setNumRevealedTiles","numFlags","setNumFlags","hasStarted","setStarted","openCongrats","setOpenCongrats","openGameOver","setOpenGameOver","Congrats","GameOver","onStart","onEnd","onReset","console","log","length","useImperativeHandle","newGame","setFlagsCount","restartGame","solveGame","updateTileState","revealNeighbourZeros","adjacentCellsToReveal","push","shift","renderTile","src","alt","buttons","Array","style","color","onClick","onContextMenu","event","toggleFlag","preventDefault","revealed","close","map","b","difficulties","name","rowCount","colCount","mineCount","App","openDifficultyDialog","openHelpDialog","flagCount","setFlagCount","useRef","rerender","setRerender","useStopwatch","_seconds","seconds","_minutes","minutes","_hours","hours","start","pause","reset","toString","time","current","Stats","use","newGameSnackbar","body","dismissesOnAction","actions","title","leading","messages","snackbarQueue","icon","label","outlined","notify","unelevated","CButton","Container","difficultyOpen","setDifficultyOpen","selectedDifficulty","setSelectedDifficulty","helpOpen","setHelpOpen","setRowCount","setColCount","setMineCount","app","open","onClose","evt","detail","action","difficulty","setTimeout","onClosed","twoLine","item","index","checked","readOnly","href","target","isDefaultAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d890f661.chunk.js","sourcesContent":["import { DetailedHTMLProps, HTMLAttributes, ReactNode } from 'react';\r\nimport '../styles/app.scss';\r\n\r\nimport { Ripple } from '@rmwc/ripple';\r\nimport '@rmwc/ripple/styles';\r\n\r\nfunction Button({ children, disabled, ...rest }: { children: ReactNode, disabled?: boolean } & DetailedHTMLProps<\r\n\tHTMLAttributes<HTMLButtonElement>,\r\n\tHTMLButtonElement\r\n>) {\r\n  return (\r\n    <Ripple disabled={disabled}>\r\n        <button className=\"customButton\" disabled={disabled} {...rest}>\r\n            {children}\r\n        </button>\r\n    </Ripple>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import { createSnackbarQueue } from '@rmwc/snackbar';\r\n\r\nexport default createSnackbarQueue()","import React, {\r\n\tComponent,\r\n\tDetailedHTMLProps,\r\n\tHTMLAttributes,\r\n\tReactNode,\r\n\tuseState,\r\n} from 'react';\r\nimport '../styles/app.scss';\r\n\r\n// Minicomponents\r\nfunction Button({\r\n\tchildren,\r\n\tpressed,\r\n\tid,\r\n\t...rest\r\n}: { children: ReactNode; pressed: boolean } & DetailedHTMLProps<\r\n\tHTMLAttributes<HTMLButtonElement>,\r\n\tHTMLButtonElement\r\n>) {\r\n\treturn (\r\n\t\t<td>\r\n\t\t\t<button\r\n\t\t\t\tclassName={`gridButton ${pressed ? 'pressed' : ''}`}\r\n\t\t\t\tid={id}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</button>\r\n\t\t</td>\r\n\t);\r\n}\r\n\r\n// Actual grid\r\nconst numColorsMap: any = {\r\n\tx: null,\r\n\t0: 'lightgrey',\r\n\t1: 'blue',\r\n\t2: 'green',\r\n\t3: 'red',\r\n\t4: 'purple',\r\n\t5: 'maroon',\r\n\t6: 'turquoise',\r\n\t7: 'black',\r\n\t8: 'grey',\r\n};\r\n\r\nconst numCharMap: any = {\r\n\tx: null,\r\n\t0: '',\r\n\t1: '𝅝',\r\n\t2: '𝅗𝅥',\r\n\t3: '♩',\r\n\t4: '♪',\r\n\t5: '𝅘𝅥𝅯',\r\n\t6: '𝅘𝅥𝅰',\r\n\t7: '𝅘𝅥𝅱',\r\n\t8: '𝅘𝅥𝅲',\r\n}\r\n\r\nconst generateFieldOf = (width: number, height: number, value: number) => {\r\n\tlet field: any = [];\r\n\tfor (let i = 0; i < height; i++) {\r\n\t\tfield[i] = [];\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\tfield[i][j] = value;\r\n\t\t}\r\n\t}\r\n\r\n\treturn [...field];\r\n};\r\n\r\nexport const generateSolvedField = (\r\n\twidth: number,\r\n\theight: number,\r\n\tnumMines: number\r\n) => {\r\n\tlet field: any = generateFieldOf(width, height, 0);\r\n\t// add mines\r\n\twhile (numMines > 0) {\r\n\t\tconst x = Math.floor(Math.random() * width);\r\n\t\tconst y = Math.floor(Math.random() * height);\r\n\t\t// As it's small ints, might have duplicates, thus checking\r\n\t\tif (field[y][x] === 'x') continue;\r\n\t\tfield[y][x] = 'x';\r\n\t\tnumMines -= 1;\r\n\t}\r\n\t// populate numbers\r\n\tfor (let i = 0; i < height; i++) {\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\tif (field[i][j] === 'x') {\r\n\t\t\t\t// increment top left\r\n\t\t\t\tif (typeof field[i - 1]?.[j - 1] === 'number')\r\n\t\t\t\t\tfield[i - 1][j - 1]++;\r\n\t\t\t\t// increment top\r\n\t\t\t\tif (typeof field[i - 1]?.[j] === 'number') field[i - 1][j]++;\r\n\t\t\t\t// increment top right\r\n\t\t\t\tif (typeof field[i - 1]?.[j + 1] === 'number')\r\n\t\t\t\t\tfield[i - 1][j + 1]++;\r\n\t\t\t\t// increment right\r\n\t\t\t\tif (typeof field[i]?.[j + 1] === 'number') field[i][j + 1]++;\r\n\t\t\t\t// increment bottom right\r\n\t\t\t\tif (typeof field[i + 1]?.[j + 1] === 'number')\r\n\t\t\t\t\tfield[i + 1][j + 1]++;\r\n\t\t\t\t// increment bottom\r\n\t\t\t\tif (typeof field[i + 1]?.[j] === 'number') field[i + 1][j]++;\r\n\t\t\t\t// increment bottom left\r\n\t\t\t\tif (typeof field[i + 1]?.[j - 1] === 'number')\r\n\t\t\t\t\tfield[i + 1][j - 1]++;\r\n\t\t\t\t// increment left\r\n\t\t\t\tif (typeof field[i]?.[j - 1] === 'number') field[i][j - 1]++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn [...field];\r\n};\r\n\r\nconst MineGrid = React.forwardRef((props: any, ref) => {\r\n\tlet [grid, setGrid] = useState(\r\n\t\tgenerateSolvedField(props.width, props.height, props.numMines)\r\n\t);\r\n\tlet [revealedGrid, setRevealedGrid] = useState(\r\n\t\tgenerateFieldOf(props.width, props.height, 0)\r\n\t);\r\n\tlet [numRevealedTiles, setNumRevealedTiles] = useState(0);\r\n\tlet [numFlags, setNumFlags] = useState(0);\r\n\tlet [hasStarted, setStarted] = useState(false);\r\n\r\n\tconst [openCongrats, setOpenCongrats] = React.useState(false);\r\n\tconst [openGameOver, setOpenGameOver] = React.useState(false);\r\n\r\n\tconst { Congrats, GameOver, onStart, onEnd, onReset } = props;\r\n\r\n\tconsole.log(`H: ${props.height}`)\r\n\tconsole.log(`G: ${grid.length}`)\r\n\tconsole.log(`R: ${revealedGrid.length}`)\r\n\tif (grid.length !== props.height) {\r\n\t\tsetGrid(\r\n\t\t\tgenerateSolvedField(props.width, props.height, props.numMines)\r\n\t\t);\r\n\t}\r\n\r\n\tif (revealedGrid.length !== props.height) {\r\n\t\tsetRevealedGrid(\r\n\t\t\tgenerateFieldOf(props.width, props.height, 0)\r\n\t\t);\r\n\t}\r\n\r\n\tReact.useImperativeHandle(ref, () => ({\r\n\t\tnewGame() {\r\n\t\t\tsetNumFlags(0);\r\n\t\t\tprops.setFlagsCount(0);\r\n\t\t\tsetNumRevealedTiles(0);\r\n\t\t\tsetGrid([\r\n\t\t\t\t...generateSolvedField(\r\n\t\t\t\t\tprops.width,\r\n\t\t\t\t\tprops.height,\r\n\t\t\t\t\tprops.numMines\r\n\t\t\t\t),\r\n\t\t\t]);\r\n\t\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 0)]);\r\n\r\n\t\t\tsetOpenCongrats(false)\r\n\t\t\tsetOpenGameOver(false)\r\n\r\n\t\t\tonReset(0, false);\r\n\t\t\tsetStarted(false);\r\n\t\t},\r\n\t\trestartGame() {\r\n\t\t\tsetNumFlags(0);\r\n\t\t\tprops.setFlagsCount(0);\r\n\t\t\tsetNumRevealedTiles(0);\r\n\t\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 0)]);\r\n\t\t\tsetStarted(false);\r\n\t\t},\r\n\t\tsolveGame() {\r\n\t\t\tsetNumFlags(0);\r\n\t\t\tprops.setFlagsCount(0);\r\n\t\t\tsetNumRevealedTiles(0);\r\n\t\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 1)]);\r\n\t\t\tsetStarted(false);\r\n\t\t},\r\n\t}));\r\n\r\n\tconst gameOver = () => {\r\n\t\tsetOpenGameOver(true);\r\n\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 1)]);\r\n\t\tonEnd();\r\n\t};\r\n\r\n\tconst winGame = () => {\r\n\t\tsetOpenCongrats(true);\r\n\t\tsetRevealedGrid([...generateFieldOf(props.width, props.height, 1)]);\r\n\t\tonEnd();\r\n\t};\r\n\r\n\tconst updateTileState = (i: number, j: number) => {\r\n\t\tif (revealedGrid[i][j] === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (grid[i][j] === 0) {\r\n\t\t\trevealNeighbourZeros(i, j);\r\n\t\t}\r\n\t\tif (grid[i][j] === 'x') {\r\n\t\t\tgameOver();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\trevealedGrid[i][j] = 1;\r\n\t\tlet numRevealedTiles = 0;\r\n\t\tfor (let i = 0; i < revealedGrid.length; i++) {\r\n\t\t\tfor (let j = 0; j < revealedGrid[i].length; j++) {\r\n\t\t\t\tif (revealedGrid[i][j] === 1) {\r\n\t\t\t\t\tnumRevealedTiles += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetNumRevealedTiles(numRevealedTiles);\r\n\t\tsetRevealedGrid([...revealedGrid]);\r\n\t\tnumRevealedTiles === props.width * props.height - props.numMines &&\r\n\t\t\twinGame();\r\n\t};\r\n\r\n\tconst toggleFlag = (i: number, j: number) => {\r\n\t\tif (revealedGrid[i][j] === 0) {\r\n\t\t\trevealedGrid[i][j] = 2;\r\n\t\t\tsetNumFlags(++numFlags);\r\n\t\t} else if (revealedGrid[i][j] === 2) {\r\n\t\t\trevealedGrid[i][j] = 0;\r\n\t\t\tsetNumFlags(--numFlags);\r\n\t\t}\r\n\r\n\t\tprops.setFlagsCount(numFlags);\r\n\t\tsetRevealedGrid([...revealedGrid]);\r\n\t};\r\n\r\n\tconst revealNeighbourZeros = (x: number, y: number) => {\r\n\t\tlet adjacentCellsToReveal = [[x, y]];\r\n\t\trevealedGrid[x][y] = 1;\r\n\t\twhile (adjacentCellsToReveal.length > 0) {\r\n\t\t\tlet [i, j] = adjacentCellsToReveal[0];\r\n\t\t\t// reveal top left\r\n\t\t\tif (\r\n\t\t\t\tgrid[i - 1]?.[j - 1] >= 0 &&\r\n\t\t\t\trevealedGrid[i - 1]?.[j - 1] === 0\r\n\t\t\t) {\r\n\t\t\t\trevealedGrid[i - 1][j - 1] = 1;\r\n\t\t\t\tgrid[i - 1]?.[j - 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i - 1, j - 1]);\r\n\t\t\t}\r\n\t\t\t// reveal top\r\n\t\t\tif (grid[i - 1]?.[j] >= 0 && revealedGrid[i - 1]?.[j] === 0) {\r\n\t\t\t\trevealedGrid[i - 1][j] = 1;\r\n\t\t\t\tgrid[i - 1]?.[j] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i - 1, j]);\r\n\t\t\t}\r\n\t\t\t// reveal top right\r\n\t\t\tif (\r\n\t\t\t\tgrid[i - 1]?.[j + 1] >= 0 &&\r\n\t\t\t\trevealedGrid[i - 1]?.[j + 1] === 0\r\n\t\t\t) {\r\n\t\t\t\trevealedGrid[i - 1][j + 1] = 1;\r\n\t\t\t\tgrid[i - 1]?.[j + 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i - 1, j + 1]);\r\n\t\t\t}\r\n\t\t\t// reveal right\r\n\t\t\tif (grid[i]?.[j + 1] >= 0 && revealedGrid[i]?.[j + 1] === 0) {\r\n\t\t\t\trevealedGrid[i][j + 1] = 1;\r\n\t\t\t\tgrid[i]?.[j + 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i, j + 1]);\r\n\t\t\t}\r\n\t\t\t// reveal bottom right\r\n\t\t\tif (\r\n\t\t\t\tgrid[i + 1]?.[j + 1] >= 0 &&\r\n\t\t\t\trevealedGrid[i + 1]?.[j + 1] === 0\r\n\t\t\t) {\r\n\t\t\t\trevealedGrid[i + 1][j + 1] = 1;\r\n\t\t\t\tgrid[i + 1]?.[j + 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i + 1, j + 1]);\r\n\t\t\t}\r\n\t\t\t// reveal bottom\r\n\t\t\tif (grid[i + 1]?.[j] >= 0 && revealedGrid[i + 1]?.[j] === 0) {\r\n\t\t\t\trevealedGrid[i + 1][j] = 1;\r\n\t\t\t\tgrid[i + 1]?.[j] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i + 1, j]);\r\n\t\t\t}\r\n\t\t\t// reveal bottom left\r\n\t\t\tif (\r\n\t\t\t\tgrid[i + 1]?.[j - 1] >= 0 &&\r\n\t\t\t\trevealedGrid[i + 1]?.[j - 1] === 0\r\n\t\t\t) {\r\n\t\t\t\trevealedGrid[i + 1][j - 1] = 1;\r\n\t\t\t\tgrid[i + 1]?.[j - 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i + 1, j - 1]);\r\n\t\t\t}\r\n\t\t\t// reveal left\r\n\t\t\tif (grid[i]?.[j - 1] >= 0 && revealedGrid[i]?.[j - 1] === 0) {\r\n\t\t\t\trevealedGrid[i][j - 1] = 1;\r\n\t\t\t\tgrid[i]?.[j - 1] === 0 &&\r\n\t\t\t\t\tadjacentCellsToReveal.push([i, j - 1]);\r\n\t\t\t}\r\n\t\t\tadjacentCellsToReveal.shift();\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderTile = (i: number, j: number) => {\r\n\t\tif (revealedGrid[i][j] === 0) {\r\n\t\t\t// not opened\r\n\t\t\treturn '';\r\n\t\t} else if (revealedGrid[i][j] === 1) {\r\n\t\t\t// opened\r\n\t\t\tif (typeof grid[i][j] === 'number') {\r\n\t\t\t\treturn numCharMap[grid[i][j]];\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc='https://twemoji.maxcdn.com/v/latest/svg/1f4a3.svg'\r\n\t\t\t\t\t\talt='mine'\r\n\t\t\t\t\t\twidth={20}\r\n\t\t\t\t\t\theight={20}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else if (revealedGrid[i][j] === 2) {\r\n\t\t\t// flagged\r\n\t\t\treturn (\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc='https://twemoji.maxcdn.com/v/latest/svg/1f6a9.svg'\r\n\t\t\t\t\talt='flag'\r\n\t\t\t\t\twidth={20}\r\n\t\t\t\t\theight={20}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tlet buttons = [];\r\n\tfor (let i = 0; i < grid.length; i++) {\r\n\t\tbuttons[i] = new Array<any>();\r\n\t\tconsole.log(i);\r\n\t\tfor (let j = 0; j < grid[i].length; j++) {\r\n\t\t\tbuttons[i].push(\r\n\t\t\t\t<Button\r\n\t\t\t\t\tid={i + ':' + j}\r\n\t\t\t\t\tpressed={revealedGrid[i][j] === 1}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\trevealedGrid[i][j] === 0\r\n\t\t\t\t\t\t\t\t? 'lightgrey'\r\n\t\t\t\t\t\t\t\t: numColorsMap[grid[i][j]],\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (!hasStarted) {\r\n\t\t\t\t\t\t\tsetStarted(true);\r\n\t\t\t\t\t\t\tonStart();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tupdateTileState(i, j);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonContextMenu={(event) => { toggleFlag(i, j); event.preventDefault(); }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{renderTile(i, j)}\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`map ${props.width < 16 ? 'small' : ''}`}>\r\n\t\t\t\t{openCongrats && Congrats({ revealed: numRevealedTiles, close: () => setOpenCongrats(false) })}\r\n\t\t\t\t{openGameOver && GameOver({ revealed: numRevealedTiles, close: () => setOpenGameOver(false) })}\r\n\t\t\t\t<table>\r\n\t\t\t\t\t{buttons.map((b) => (\r\n\t\t\t\t\t\t<tr>{b}</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default MineGrid;\r\n","import CButton from './components/CButton';\nimport Grid from './components/MineGrid';\nimport './styles/app.scss';\n\nimport { Button } from '@rmwc/button';\nimport {\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogActions,\n\tDialogButton,\n} from '@rmwc/dialog';\nimport { IconButton } from '@rmwc/icon-button';\nimport {\n\tList,\n\tListItem,\n\tListItemMeta,\n\tListItemPrimaryText,\n\tListItemSecondaryText,\n\tListItemText,\n} from '@rmwc/list';\nimport { Radio } from '@rmwc/radio';\nimport { Typography } from '@rmwc/typography';\nimport { SnackbarQueue } from '@rmwc/snackbar';\nimport '@rmwc/button/styles';\nimport '@rmwc/dialog/styles';\nimport '@rmwc/icon-button/styles';\nimport '@rmwc/list/styles';\nimport '@rmwc/radio/styles';\nimport '@rmwc/typography/styles';\nimport '@rmwc/snackbar/styles';\n\nimport snackbarQueue from './queues/snackbar';\n\nimport { forwardRef, useRef, useState } from 'react';\nimport MineGrid from './components/MineGrid';\n\nimport { useStopwatch } from 'react-timer-hook';\nimport React from 'react';\n\nconst difficulties = [\n\t{\n\t\tname: 'Beginner',\n\t\trowCount: 9,\n\t\tcolCount: 9,\n\t\tmineCount: 10,\n\t},\n\t{\n\t\tname: 'Intermediate',\n\t\trowCount: 16,\n\t\tcolCount: 16,\n\t\tmineCount: 40,\n\t},\n\t{\n\t\tname: 'Expert',\n\t\trowCount: 16,\n\t\tcolCount: 30,\n\t\tmineCount: 99,\n\t},\n];\n\nconst App = forwardRef(\n\t(\n\t\t{\n\t\t\trowCount,\n\t\t\tcolCount,\n\t\t\tmineCount,\n\t\t\topenDifficultyDialog,\n      openHelpDialog,\n\t\t}: { [index: string]: any },\n\t\tref\n\t) => {\n\t\t// Actual state\n\t\tconst [flagCount, setFlagCount] = useState(0);\n\t\tconst grid = useRef<any>();\n\n    // Rerender\n    const [rerender, setRerender] = useState(0);\n\n\t\t// Timer\n\t\tconst {\n\t\t\tseconds: _seconds,\n\t\t\tminutes: _minutes,\n\t\t\thours: _hours,\n\t\t\tstart,\n\t\t\tpause,\n\t\t\treset,\n\t\t} = useStopwatch({});\n\n\t\tconst seconds =\n\t\t\t_seconds.toString().length == 1 ? `0${_seconds}` : _seconds;\n\t\tconst minutes =\n\t\t\t_minutes.toString().length == 1 ? `0${_minutes}` : _minutes;\n\t\tconst hours = _hours.toString().length == 1 ? `0${_hours}` : _hours;\n\n\t\tconst time = `${hours}:${minutes}:${seconds}`;\n\n\t\t// Functions\n\t\tReact.useImperativeHandle(ref, () => ({\n\t\t\tnewGame() {\n\t\t\t\tgrid.current.newGame();\n\t\t\t},\n      rerender() {\n        setRerender(rerender + 1);\n      }\n\t\t}));\n\n\t\tconst Stats = ({ revealed }: any) => (\n\t\t\t<div className='flexRow'>\n\t\t\t\t<div>\n\t\t\t\t\t<Typography use='headline5'>{flagCount}</Typography>\n\t\t\t\t\t<Typography use='subtitle2'>Flags Placed</Typography>\n\t\t\t\t</div>\n\t\t\t\t<div className='divider' />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography use='headline5'>{time}</Typography>\n\t\t\t\t\t<Typography use='subtitle2'>Time</Typography>\n\t\t\t\t</div>\n\t\t\t\t<div className='divider' />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography use='headline5'>{revealed}</Typography>\n\t\t\t\t\t<Typography use='subtitle2'>Blocks revealed</Typography>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\tconst newGameSnackbar = {\n\t\t\tbody: \"Click 'Start a new match' to make a new game\",\n\t\t\tdismissesOnAction: true,\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Dismiss',\n\t\t\t\t},\n\t\t\t],\n\t\t\tleading: true,\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<SnackbarQueue messages={snackbarQueue.messages} />\n\n\t\t\t\t<div className='gameWrapper'>\n\t\t\t\t\t<div className='header'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc='https://twemoji.maxcdn.com/v/latest/svg/1f6a9.svg'\n\t\t\t\t\t\t\t\tclassName='icon'\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div>{mineCount - flagCount}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='divider'></div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc='https://twemoji.maxcdn.com/v/latest/svg/1f550.svg'\n\t\t\t\t\t\t\t\tclassName='icon'\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div>{time}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spacer' />\n\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ticon='help_outline'\n\t\t\t\t\t\t\tlabel='Help & controls'\n              onClick={openHelpDialog}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<MineGrid\n\t\t\t\t\t\tref={grid}\n\t\t\t\t\t\theight={rowCount || 16}\n\t\t\t\t\t\twidth={colCount || 30}\n\t\t\t\t\t\tnumMines={mineCount || 99}\n\t\t\t\t\t\tsetFlagsCount={setFlagCount}\n\t\t\t\t\t\tonStart={start}\n\t\t\t\t\t\tonEnd={pause}\n\t\t\t\t\t\tonReset={reset}\n\t\t\t\t\t\tGameOver={({ revealed, close }: any) => (\n\t\t\t\t\t\t\t<div className='banner error'>\n\t\t\t\t\t\t\t\t<Typography use='headline4'>\n\t\t\t\t\t\t\t\t\tGame Over\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography use='subtitle1'>\n\t\t\t\t\t\t\t\t\tYou triggered a mine.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Stats revealed={revealed} />\n\n\t\t\t\t\t\t\t\t<div className='buttonRow'>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='Review last game'\n\t\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsnackbarQueue.notify(\n\t\t\t\t\t\t\t\t\t\t\t\tnewGameSnackbar\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='Change difficulty'\n\t\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t\t\tonClick={openDifficultyDialog}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='New game'\n\t\t\t\t\t\t\t\t\t\tunelevated\n\t\t\t\t\t\t\t\t\t\tonClick={grid?.current?.newGame}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tCongrats={({ revealed, close }: any) => (\n\t\t\t\t\t\t\t<div className='banner error'>\n\t\t\t\t\t\t\t\t<Typography use='headline4'>\n\t\t\t\t\t\t\t\t\tGame Completed!\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography use='subtitle1'>\n\t\t\t\t\t\t\t\t\tYou got through the entire map without\n\t\t\t\t\t\t\t\t\ttriggering a mine.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Stats revealed={revealed} />\n\n\t\t\t\t\t\t\t\t<div className='buttonRow'>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='Review last game'\n\t\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsnackbarQueue.notify(\n\t\t\t\t\t\t\t\t\t\t\t\tnewGameSnackbar\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='Change difficulty'\n\t\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t\t\tonClick={openDifficultyDialog}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tlabel='New game'\n\t\t\t\t\t\t\t\t\t\tunelevated\n\t\t\t\t\t\t\t\t\t\tonClick={grid?.current?.newGame}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className='actionRow buttonRow'>\n\t\t\t\t\t\t<CButton onClick={grid?.current?.newGame}>\n\t\t\t\t\t\t\t<span className='material-icons'>refresh</span>\n\t\t\t\t\t\t\t<span>Start a new match</span>\n\t\t\t\t\t\t</CButton>\n\n\t\t\t\t\t\t<CButton onClick={openDifficultyDialog}>\n\t\t\t\t\t\t\t<span className='material-icons'>tune</span>\n\t\t\t\t\t\t\t<span>Change difficulty</span>\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n);\n\nfunction Container() {\n\t// Dialogs\n\t/* Difficulty */\n\tconst [difficultyOpen, setDifficultyOpen] = useState(false);\n\tconst [selectedDifficulty, setSelectedDifficulty] = useState(2);\n\n  /* Help */\n\tconst [helpOpen, setHelpOpen] = useState(false);\n\n\t// Configuration\n\tconst [rowCount, setRowCount] = useState(16);\n\tconst [colCount, setColCount] = useState(30);\n\tconst [mineCount, setMineCount] = useState(99);\n\n\t// App ref\n\tconst app = useRef<any>();\n\n\treturn (\n\t\t<>\n\t\t\t<Dialog\n\t\t\t\topen={difficultyOpen}\n\t\t\t\tonClose={(evt) => {\n\t\t\t\t\tconsole.log(evt.detail.action);\n\t\t\t\t\tif (evt.detail.action == 'change') {\n\t\t\t\t\t\tconst difficulty = difficulties[selectedDifficulty];\n\n            console.log()\n\n\t\t\t\t\t\tsetRowCount(difficulty.rowCount);\n\t\t\t\t\t\tsetColCount(difficulty.colCount);\n\t\t\t\t\t\tsetMineCount(difficulty.mineCount);\n\n            app.current?.rerender();\n\n\t\t\t\t\t\tsetTimeout(() => {\n              app.current?.newGame();\n            }, 50)\n\t\t\t\t\t}\n\n\t\t\t\t\tsetDifficultyOpen(false);\n\t\t\t\t}}\n\t\t\t\tonClosed={(evt) => console.log(evt.detail.action)}\n\t\t\t>\n\t\t\t\t<DialogTitle>Change Difficulty</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>Warning:</b> This will create a new game.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<List twoLine style={{ width: 480 }}>\n\t\t\t\t\t\t{difficulties.map((item, index) => (\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonClick={() => setSelectedDifficulty(index)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemText>\n\t\t\t\t\t\t\t\t\t<ListItemPrimaryText>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</ListItemPrimaryText>\n\t\t\t\t\t\t\t\t\t<ListItemSecondaryText>\n\t\t\t\t\t\t\t\t\t\tRows: {item.rowCount} - Columns:{' '}\n\t\t\t\t\t\t\t\t\t\t{item.colCount} - Mines:{' '}\n\t\t\t\t\t\t\t\t\t\t{item.mineCount}\n\t\t\t\t\t\t\t\t\t</ListItemSecondaryText>\n\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t<ListItemMeta>\n\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\tchecked={selectedDifficulty === index}\n\t\t\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ListItemMeta>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<DialogButton action='close'>Cancel</DialogButton>\n\t\t\t\t\t<DialogButton action='change' unelevated>\n\t\t\t\t\t\tChange difficulty\n\t\t\t\t\t</DialogButton>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\n      <Dialog\n\t\t\t\topen={helpOpen}\n\t\t\t\tonClose={(evt) => {\n\t\t\t\t\tsetHelpOpen(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DialogTitle>Info</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMusical Minesweeper, v1.0.0 by RealSGII2.\n\t\t\t\t\t</p>\n          <p>\n            A skin of Minesweeper using musical notes.\n          </p>\n\n          <Typography use=\"headline5\">\n            Main Goal\n          </Typography>\n          <p>\n            Clear the entire map except for blocks containing mines underneath them. Flagging is optional, but may be useful.\n          </p>\n\n          <Typography use=\"headline5\">\n            Controls\n          </Typography>\n          <p>\n            <b>Left mouse button</b>: Reveal a block <br/>\n            <b>Right mouse button</b>: Flag a block, again to unflag\n          </p>\n\n          <Typography use=\"headline5\">\n            Credits\n          </Typography>\n          <p>\n            Flag, clock, and bomb emoji made by Twitter in the Twemoji project. This website uses <a href=\"https://material.io/\" target=\"_blank\">https://material.io/</a> standards.\n          </p>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<DialogButton action='close' isDefaultAction>Dismiss</DialogButton>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\n\t\t\t<App\n\t\t\t\trowCount={rowCount}\n\t\t\t\tcolCount={colCount}\n\t\t\t\tmineCount={mineCount}\n\t\t\t\topenDifficultyDialog={() => setDifficultyOpen(true)}\n        openHelpDialog={() => setHelpOpen(true)}\n\t\t\t\tref={app}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default Container;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}